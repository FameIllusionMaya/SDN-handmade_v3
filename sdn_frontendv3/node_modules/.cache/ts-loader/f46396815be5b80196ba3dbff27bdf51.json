{"remainingRequest":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\ts-loader\\index.js??ref--15-2!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\PolicyRouting.vue?vue&type=script&lang=ts","dependencies":[{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\PolicyRouting.vue","mtime":1653034263741},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\babel.config.js","mtime":1639411198188},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647613403080},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\babel-loader\\lib\\index.js","mtime":1647613402984},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\ts-loader\\index.js","mtime":1647613419057},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647613403080},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1647613423241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\PolicyRouting.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { onMounted, reactive, ref } from \"vue\";\r\nimport client from \"../apiclient\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport default {\r\n  setup(){\r\n    \r\n    const policy = reactive({\r\n        name:'',\r\n        device_management_ip:'',\r\n        src_ip:'',\r\n        src_netmask:'',\r\n        src_port:'',\r\n        dst_ip:'',\r\n        dst_netmask:'',\r\n        dst_port:'',\r\n        action:'',\r\n        outgoing:'',\r\n    });\r\n    const nodes = reactive({});\r\n    const action_devices = ref<any[]>([{'device':\"\", \"action\":\"\", \"data\":\"\"}]);\r\n    const device_choices = reactive({});\r\n    const policy_list = reactive({});\r\n\r\n    async function fetchNetwork(nodes: any): Promise<void> {\r\n      const {\r\n        data: { graph, status },\r\n      } = await client.getAll();\r\n      const newNodes = graph.nodes;\r\n      const newEdges = graph.edges;\r\n      const newLayouts = graph.layout;\r\n      Object.assign(nodes, newNodes);\r\n      \r\n    }\r\n\r\n    async function fetchPolicy(): Promise<void> {\r\n      const { data } = await client.getPolicyRouting();\r\n      Object.assign(policy_list, data.flows)\r\n    }\r\n\r\n    async function addPolicy(): Promise<void>{\r\n\r\n      const actions: unknown[] = [];\r\n      // console.log(action_devices)\r\n      for(const action in action_devices.value){\r\n        actions.push({\r\n          'device_id': nodes[action_devices.value[action].device].device_id,\r\n          'action': parseInt(action_devices.value[action].action),\r\n          'data': action_devices.value[action].data\r\n        })\r\n      }\r\n      console.log(actions)\r\n\r\n      const {\r\n        data: {success}\r\n      } = await client.addPolicyRouting(\r\n        {\r\n          'name': policy.name,\r\n          'src_ip': policy.src_ip,\r\n          'src_port': policy.src_port,\r\n          'src_subnet': policy.src_netmask,\r\n          'dst_ip': policy.dst_ip,\r\n          'dst_port': policy.dst_port,\r\n          'dst_subnet': policy.dst_netmask,\r\n          'actions': actions\r\n        })\r\n      if(success){\r\n        Swal.fire({title:\"Add Policy Successful\", icon:\"success\", confirmButtonText:\"Okay\"})\r\n      }\r\n      else{\r\n        Swal.fire({title:\"Error during the process\", icon:\"error\", confirmButtonText:\"Okay\"})\r\n      }\r\n    }\r\n\r\n    async function removePolicy(flow_id: string): Promise<void>{\r\n      const  data  = await client.deletePolicyRouting(flow_id)\r\n      console.log(data)\r\n      if(data){\r\n        Swal.fire({title:\"Remove Policy Successful\", icon:\"success\", confirmButtonText:\"Okay\"})\r\n      }\r\n      else{\r\n        Swal.fire({title:\"Error during the process\", icon:\"error\", confirmButtonText:\"Okay\"})\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      setInterval(()=>fetchPolicy(), 1000);\r\n      setInterval(()=>fetchNetwork(), 1000);\r\n\r\n      fetchPolicy();\r\n      fetchNetwork();\r\n\r\n    });\r\n\r\n  \r\n    return {policy, action_devices, device_choices, policy_list,\r\n    addPolicy, removePolicy}\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}]}