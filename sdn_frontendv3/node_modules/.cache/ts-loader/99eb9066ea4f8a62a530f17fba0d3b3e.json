{"remainingRequest":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\ts-loader\\index.js??ref--15-3!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\Home.vue?vue&type=script&lang=ts","dependencies":[{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\Home.vue","mtime":1647770515945},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\babel.config.js","mtime":1639411198188},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647613403080},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647613403156},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\babel-loader\\lib\\index.js","mtime":1647613402984},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\ts-loader\\index.js","mtime":1647613419057},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647613403080},{"path":"D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1647613423241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L0dpdC9zZG5fZnJvbnRlbmQvc2RuX2Zyb250ZW5kdjMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgb25Nb3VudGVkLCByZWFjdGl2ZSwgd2F0Y2hFZmZlY3QsIHJlZiwgd2F0Y2ggfSBmcm9tICJ2dWUiOwppbXBvcnQgeyBnZXRGdWxsQ29uZmlncyB9IGZyb20gInYtbmV0d29yay1ncmFwaCI7IC8vIGltcG9ydCAqIGFzIHZORyBmcm9tICJ2LW5ldHdvcmstZ3JhcGgiCi8vIGltcG9ydCB7Rm9yY2VMYXlvdXR9IGZyb20gIkAvbm9kZV9tb2R1bGVzL3YtbmV0d29yay1ncmFwaC9saWIvbGF5b3V0cy9mb3JjZS1sYXlvdXQiCgppbXBvcnQgY2xpZW50IGZyb20gIkAvYXBpY2xpZW50IjsKaW1wb3J0ICIvbm9kZV9tb2R1bGVzL3Z1ZS1zY3JvbGxpbmctdGFibGUvZGlzdC9zdHlsZS5jc3MiOwppbXBvcnQgU3dhbCBmcm9tICdzd2VldGFsZXJ0Mic7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogIkhvbWUiLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciBwb3J0bnVtID0gcmVmKCIiKTsKICAgIHZhciBmaWx0ZXJzID0gcmVhY3RpdmUoewogICAgICBwb3J0X251bTogcmVmKFtdKSwKICAgICAgc3JjX2lwOiByZWYoW10pLAogICAgICBkc3RfaXA6IHJlZihbXSkKICAgIH0pOwogICAgdmFyIG5vZGVzID0gcmVhY3RpdmUoe30pOwogICAgdmFyIGVkZ2VzID0gcmVhY3RpdmUoe30pOwogICAgdmFyIGZsb3dzID0gcmVhY3RpdmUoe30pOwogICAgdmFyIHNlbGVjdGVkRWRnZXMgPSByZWYoW10pOwogICAgdmFyIHNlbGVjdGVkRWRnZSA9IHJlZigiIik7CiAgICB2YXIgc2VsZWN0ZWRFZGdlRmxvd3MgPSByZWYoW10pOwogICAgdmFyIGNvbmZpZ3MgPSByZWFjdGl2ZShnZXRGdWxsQ29uZmlncygpKTsKICAgIGNvbmZpZ3Mubm9kZS5zZWxlY3RhYmxlID0gdHJ1ZTsKICAgIGNvbmZpZ3MuZWRnZS5zZWxlY3RhYmxlID0gdHJ1ZTsKCiAgICBjb25maWdzLmVkZ2Uubm9ybWFsLndpZHRoID0gZnVuY3Rpb24gKGVkZ2UpIHsKICAgICAgcmV0dXJuIGVkZ2UuYW5pbWF0ZSA/IDMgOiAyOwogICAgfTsKCiAgICBjb25maWdzLmVkZ2Uubm9ybWFsLmRhc2hhcnJheSA9IGZ1bmN0aW9uIChlZGdlKSB7CiAgICAgIHJldHVybiBlZGdlLmFuaW1hdGUgPyAiNSIgOiAiMCI7CiAgICB9OwoKICAgIGNvbmZpZ3MuZWRnZS5ub3JtYWwuYW5pbWF0ZSA9IGZ1bmN0aW9uIChlZGdlKSB7CiAgICAgIHJldHVybiAhIWVkZ2UuYW5pbWF0ZTsKICAgIH07CgogICAgdmFyIHNyY19pcCA9IHJlZigiIik7CiAgICB2YXIgZHN0X2lwID0gcmVmKCIiKTsKCiAgICBmdW5jdGlvbiBmZXRjaE5ldHdvcmsoX3gsIF94MikgewogICAgICByZXR1cm4gX2ZldGNoTmV0d29yay5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIF9mZXRjaE5ldHdvcmsoKSB7CiAgICAgIF9mZXRjaE5ldHdvcmsgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUobm9kZXMsIGVkZ2VzKSB7CiAgICAgICAgdmFyIF95aWVsZCRjbGllbnQkZ2V0QWxsLCBfeWllbGQkY2xpZW50JGdldEFsbCQsIGdyYXBoLCBzdGF0dXMsIG5ld05vZGVzLCBuZXdFZGdlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gY2xpZW50LmdldEFsbCgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkY2xpZW50JGdldEFsbCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfeWllbGQkY2xpZW50JGdldEFsbCQgPSBfeWllbGQkY2xpZW50JGdldEFsbC5kYXRhOwogICAgICAgICAgICAgICAgZ3JhcGggPSBfeWllbGQkY2xpZW50JGdldEFsbCQuZ3JhcGg7CiAgICAgICAgICAgICAgICBzdGF0dXMgPSBfeWllbGQkY2xpZW50JGdldEFsbCQuc3RhdHVzOwogICAgICAgICAgICAgICAgbmV3Tm9kZXMgPSBncmFwaC5ub2RlczsKICAgICAgICAgICAgICAgIG5ld0VkZ2VzID0gZ3JhcGguZWRnZXM7CiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG5vZGVzLCBuZXdOb2Rlcyk7CiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGVkZ2VzLCBuZXdFZGdlcyk7CiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSAib2siKSBTd2FsLmZpcmUoewogICAgICAgICAgICAgICAgICB0aXRsZTogIlRvcG9sb2d5IExvYWRlZCIsCiAgICAgICAgICAgICAgICAgIGljb246ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgdGltZXI6IDIwMDAKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2RvbmUnKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CiAgICAgIHJldHVybiBfZmV0Y2hOZXR3b3JrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgZnVuY3Rpb24gZmV0Y2hOZXR3b3JrRmxvdyhfeDMsIF94NCwgX3g1KSB7CiAgICAgIHJldHVybiBfZmV0Y2hOZXR3b3JrRmxvdy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIF9mZXRjaE5ldHdvcmtGbG93KCkgewogICAgICBfZmV0Y2hOZXR3b3JrRmxvdyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIobm9kZXMsIGVkZ2VzLCBmaWx0ZXJzKSB7CiAgICAgICAgdmFyIF95aWVsZCRjbGllbnQkcG9zdEZpbCwgX3lpZWxkJGNsaWVudCRwb3N0RmlsMiwgZ3JhcGgsIGZsb3dzX2RhdGEsIG5ld05vZGVzLCBuZXdFZGdlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQucG9zdEZpbHRlcnMoZmlsdGVycyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRjbGllbnQkcG9zdEZpbCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3lpZWxkJGNsaWVudCRwb3N0RmlsMiA9IF95aWVsZCRjbGllbnQkcG9zdEZpbC5kYXRhOwogICAgICAgICAgICAgICAgZ3JhcGggPSBfeWllbGQkY2xpZW50JHBvc3RGaWwyLmdyYXBoOwogICAgICAgICAgICAgICAgZmxvd3NfZGF0YSA9IF95aWVsZCRjbGllbnQkcG9zdEZpbDIuZmxvd3NfZGF0YTsKICAgICAgICAgICAgICAgIG5ld05vZGVzID0gZ3JhcGgubm9kZXM7CiAgICAgICAgICAgICAgICBuZXdFZGdlcyA9IGdyYXBoLmVkZ2VzOwogICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihmbG93cywgZmxvd3NfZGF0YSk7CiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG5vZGVzLCBuZXdOb2Rlcyk7CiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGVkZ2VzLCBuZXdFZGdlcyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlZGdlcyk7IC8vIGNvbnNvbGUubG9nKCd1cGRhdGUgZmxvdyBkb25lJykKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIF9mZXRjaE5ldHdvcmtGbG93LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgZnVuY3Rpb24gYWRkUG9ydEZpbHRlcigpIHsKICAgICAgaWYgKHBvcnRudW0udmFsdWUgPT09ICIiKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcG9ydCA9IHBhcnNlSW50KHBvcnRudW0udmFsdWUpOwoKICAgICAgaWYgKCFmaWx0ZXJzLnBvcnRfbnVtLmluY2x1ZGVzKHBvcnQpKSB7CiAgICAgICAgZmlsdGVycy5wb3J0X251bS5wdXNoKHBvcnQpOwogICAgICB9CgogICAgICBwb3J0bnVtLnZhbHVlID0gIiI7CiAgICAgIGZldGNoTmV0d29ya0Zsb3cobm9kZXMsIGVkZ2VzLCB7CiAgICAgICAgImZpbHRlcnMiOiBmaWx0ZXJzCiAgICAgIH0pOwogICAgfQoKICAgIGZ1bmN0aW9uIGFkZFNvdXJjZUZpbHRlcigpIHsKICAgICAgaWYgKHNyY19pcC52YWx1ZSA9PT0gIiIpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciBzcmMgPSBzcmNfaXAudmFsdWU7CgogICAgICBpZiAoIWZpbHRlcnMuc3JjX2lwLmluY2x1ZGVzKHNyYykpIHsKICAgICAgICBmaWx0ZXJzLnNyY19pcC5wdXNoKHNyYyk7CiAgICAgIH0KCiAgICAgIHNyY19pcC52YWx1ZSA9ICIiOwogICAgICBmZXRjaE5ldHdvcmtGbG93KG5vZGVzLCBlZGdlcywgewogICAgICAgICJmaWx0ZXJzIjogZmlsdGVycwogICAgICB9KTsKICAgIH0KCiAgICBmdW5jdGlvbiBhZGREZXN0RmlsdGVyKCkgewogICAgICBpZiAoZHN0X2lwLnZhbHVlID09PSAiIikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGRzdCA9IGRzdF9pcC52YWx1ZTsKCiAgICAgIGlmICghZmlsdGVycy5kc3RfaXAuaW5jbHVkZXMoZHN0KSkgewogICAgICAgIGZpbHRlcnMuZHN0X2lwLnB1c2goZHN0KTsKICAgICAgfQoKICAgICAgZHN0X2lwLnZhbHVlID0gIiI7CiAgICAgIGZldGNoTmV0d29ya0Zsb3cobm9kZXMsIGVkZ2VzLCB7CiAgICAgICAgImZpbHRlcnMiOiBmaWx0ZXJzCiAgICAgIH0pOwogICAgfQoKICAgIHdhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHNlbGVjdGVkRWRnZXMudmFsdWVbMF07CiAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgIHNlbGVjdGVkRWRnZS52YWx1ZSA9IHNlbGVjdGVkRWRnZXMudmFsdWVbMF07CiAgICAgIGZldGNoTmV0d29ya0Zsb3cobm9kZXMsIGVkZ2VzLCB7CiAgICAgICAgImZpbHRlcnMiOiBmaWx0ZXJzCiAgICAgIH0pOwogICAgICBzZWxlY3RlZEVkZ2VGbG93cy52YWx1ZSA9IGZsb3dzW3NlbGVjdGVkRWRnZS52YWx1ZV07IC8vIE9iamVjdC5hc3NpZ24oc2VsZWN0ZWRFZGdlRmxvd3MsIGZsb3dzW3NlbGVjdGVkRWRnZS52YWx1ZV0pCiAgICAgIC8vIGVkZ2VzW3NlbGVjdGVkRWRnZV0uYW5pbWF0ZSA9IHRydWUKICAgICAgLy8gY29uc29sZS5sb2coc2VsZWN0ZWRFZGdlKQogICAgfSk7CgogICAgZnVuY3Rpb24gZ2V0U291cmNlRnJvbUVkZ2VOYW1lKGVkZ2VOYW1lKSB7CiAgICAgIHZhciBlZGdlID0gZWRnZXNbZWRnZU5hbWVdOwogICAgICB2YXIgc3JjID0gbm9kZXNbZWRnZS5zb3VyY2VdLm5hbWU7CiAgICAgIHJldHVybiBzcmM7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0RGVzdGluYXRpb25Gcm9tRWRnZU5hbWUoZWRnZU5hbWUpIHsKICAgICAgdmFyIGVkZ2UgPSBlZGdlc1tlZGdlTmFtZV07CiAgICAgIHZhciBkc3QgPSBub2Rlc1tlZGdlLnRhcmdldF0ubmFtZTsKICAgICAgcmV0dXJuIGRzdDsKICAgIH0KCiAgICBmdW5jdGlvbiBjbGVhckZpbHRlcigpIHsKICAgICAgZmlsdGVycy5zcmNfaXAuc3BsaWNlKDAsIGZpbHRlcnMuc3JjX2lwLmxlbmd0aCk7CiAgICAgIGZpbHRlcnMuZHN0X2lwLnNwbGljZSgwLCBmaWx0ZXJzLmRzdF9pcC5sZW5ndGgpOwogICAgICBmaWx0ZXJzLnBvcnRfbnVtLnNwbGljZSgwLCBmaWx0ZXJzLnBvcnRfbnVtLmxlbmd0aCk7CiAgICAgIGZldGNoTmV0d29ya0Zsb3cobm9kZXMsIGVkZ2VzLCB7CiAgICAgICAgImZpbHRlcnMiOiBmaWx0ZXJzCiAgICAgIH0pOwogICAgfQoKICAgIG9uTW91bnRlZChmdW5jdGlvbiAoKSB7CiAgICAgIGZldGNoTmV0d29yayhub2RlcywgZWRnZXMpOwogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIGZldGNoTmV0d29ya0Zsb3cobm9kZXMsIGVkZ2VzLCB7CiAgICAgICAgICAiZmlsdGVycyI6IGZpbHRlcnMKICAgICAgICB9KTsKICAgICAgfSwgNTAwMCk7CiAgICB9KTsKICAgIHdhdGNoRWZmZWN0KGZ1bmN0aW9uICgpIHsvLyBmZXRjaE5ldHdvcmsobm9kZXMsIGVkZ2VzKTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgbm9kZXM6IG5vZGVzLAogICAgICBlZGdlczogZWRnZXMsCiAgICAgIGNvbmZpZ3M6IGNvbmZpZ3MsCiAgICAgIHBvcnRudW06IHBvcnRudW0sCiAgICAgIGZpbHRlcnM6IGZpbHRlcnMsCiAgICAgIHNlbGVjdGVkRWRnZXM6IHNlbGVjdGVkRWRnZXMsCiAgICAgIHNlbGVjdGVkRWRnZTogc2VsZWN0ZWRFZGdlLAogICAgICBzZWxlY3RlZEVkZ2VGbG93czogc2VsZWN0ZWRFZGdlRmxvd3MsCiAgICAgIHNyY19pcDogc3JjX2lwLAogICAgICBkc3RfaXA6IGRzdF9pcCwKICAgICAgYWRkUG9ydEZpbHRlcjogYWRkUG9ydEZpbHRlciwKICAgICAgY2xlYXJGaWx0ZXI6IGNsZWFyRmlsdGVyLAogICAgICBmZXRjaE5ldHdvcms6IGZldGNoTmV0d29yaywKICAgICAgZ2V0U291cmNlRnJvbUVkZ2VOYW1lOiBnZXRTb3VyY2VGcm9tRWRnZU5hbWUsCiAgICAgIGdldERlc3RpbmF0aW9uRnJvbUVkZ2VOYW1lOiBnZXREZXN0aW5hdGlvbkZyb21FZGdlTmFtZSwKICAgICAgZmV0Y2hOZXR3b3JrRmxvdzogZmV0Y2hOZXR3b3JrRmxvdywKICAgICAgYWRkU291cmNlRmlsdGVyOiBhZGRTb3VyY2VGaWx0ZXIsCiAgICAgIGFkZERlc3RGaWx0ZXI6IGFkZERlc3RGaWx0ZXIKICAgIH07CiAgfQp9KTs="},{"version":3,"sources":["D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Git\\sdn_frontend\\sdn_frontendv3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Git\\sdn_frontend\\sdn_frontendv3\\src\\views\\Home.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { defineComponent, onMounted, reactive, watchEffect, ref, watch } from \"vue\";\nimport { Nodes, Edges, getFullConfigs } from \"v-network-graph\";\n// import * as vNG from \"v-network-graph\"\n// import {ForceLayout} from \"@/node_modules/v-network-graph/lib/layouts/force-layout\"\nimport client from \"@/apiclient\";\nimport \"/node_modules/vue-scrolling-table/dist/style.css\"\nimport Swal from 'sweetalert2'\n\nexport default defineComponent({\n  name: \"Home\",\n  setup() {\n    const portnum = ref<string>(\"\");\n    const filters = reactive({\n      port_num: ref<number[]>([]),\n      src_ip: ref<string[]>([]),\n      dst_ip: ref<string[]>([])\n    });\n    const nodes = reactive({});\n    const edges = reactive({});\n    const flows = reactive({});\n    const selectedEdges = ref<string[]>([]);\n    const selectedEdge = ref<string>(\"\");\n    const selectedEdgeFlows = ref<any[]>([]);\n    const configs = reactive(getFullConfigs())\n    configs.node.selectable = true;\n    configs.edge.selectable = true;\n    configs.edge.normal.width = edge => edge.animate ? 3 : 2;\n    configs.edge.normal.dasharray = edge => edge.animate ? \"5\" : \"0\"\n    configs.edge.normal.animate = edge => !!edge.animate\n    const src_ip = ref<string>(\"\");\n    const dst_ip = ref<string>(\"\");\n\n    async function fetchNetwork(nodes: Nodes, edges: Edges): Promise<void> {\n      const {\n        data: { graph, status },\n      } = await client.getAll();\n      const newNodes = graph.nodes;\n      const newEdges = graph.edges;\n      Object.assign(nodes, newNodes);\n      Object.assign(edges, newEdges);\n      \n      if(status === \"ok\")\n        Swal.fire({title: \"Topology Loaded\", icon:\"success\", timer:2000})\n      console.log('done')\n    }\n\n    async function fetchNetworkFlow(nodes: Nodes, edges: Edges, filters:any): Promise<void> {\n      const {\n        data: { graph, flows_data },\n      } = await client.postFilters(filters);\n      const newNodes = graph.nodes;\n      const newEdges = graph.edges;\n      Object.assign(flows, flows_data)\n      Object.assign(nodes, newNodes);\n      Object.assign(edges, newEdges);\n      console.log(edges)\n      // console.log('update flow done')\n    }\n\n    function addPortFilter(): void {\n      if (portnum.value === \"\"){\n        return ;\n      }\n      const port = parseInt(portnum.value);\n      if (!filters.port_num.includes(port)) {\n        filters.port_num.push(port);\n      }\n      portnum.value = \"\";\n      fetchNetworkFlow(nodes, edges, {\"filters\":filters})\n    }\n\n    function addSourceFilter(): void {\n      if (src_ip.value === \"\"){\n        return ;\n      }\n      const src = src_ip.value;\n      if (!filters.src_ip.includes(src)) {\n        filters.src_ip.push(src);\n      }\n      src_ip.value = \"\";\n      fetchNetworkFlow(nodes, edges, {\"filters\":filters})\n    }\n\n    function addDestFilter(): void {\n      if (dst_ip.value === \"\"){\n        return ;\n      }\n      const dst = dst_ip.value;\n      if (!filters.dst_ip.includes(dst)) {\n        filters.dst_ip.push(dst);\n      }\n      dst_ip.value = \"\";\n      fetchNetworkFlow(nodes, edges, {\"filters\":filters})\n    }\n\n\n\n    watch(\n      ()=>selectedEdges.value[0],\n      ()=>{\n        selectedEdge.value = selectedEdges.value[0]\n        fetchNetworkFlow(nodes, edges, {\"filters\":filters})\n        selectedEdgeFlows.value = flows[selectedEdge.value]\n        // Object.assign(selectedEdgeFlows, flows[selectedEdge.value])\n        // edges[selectedEdge].animate = true\n        // console.log(selectedEdge)\n      }\n    )\n\n    function getSourceFromEdgeName(edgeName): string{\n      const edge = edges[edgeName]\n      const src = nodes[edge.source].name\n      return src\n    }\n    function getDestinationFromEdgeName(edgeName): string{\n      const edge = edges[edgeName]\n      const dst = nodes[edge.target].name\n      return dst\n    }\n\n\n    function clearFilter(): void{\n      filters.src_ip.splice(0, filters.src_ip.length)\n      filters.dst_ip.splice(0, filters.dst_ip.length)\n      filters.port_num.splice(0, filters.port_num.length)\n      fetchNetworkFlow(nodes, edges, {\"filters\":filters})\n    }\n\n    onMounted(() => {\n      fetchNetwork(nodes, edges);\n      setInterval(()=>fetchNetworkFlow(nodes, edges, {\"filters\":filters}), 5000);\n    });\n    watchEffect(() => {\n      // fetchNetwork(nodes, edges);\n    });\n    return { nodes, edges, configs, portnum, filters, selectedEdges, selectedEdge, selectedEdgeFlows, src_ip, dst_ip, \n    addPortFilter, clearFilter, fetchNetwork, getSourceFromEdgeName, getDestinationFromEdgeName, fetchNetworkFlow,\n    addSourceFilter, addDestFilter};\n  },\n});\n"],"sourceRoot":""}]}